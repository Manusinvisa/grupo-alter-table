-- Eliminar las tablas si ya existen
IF OBJECT_ID('INSCRIPCIONES', 'U') IS NOT NULL DROP TABLE INSCRIPCIONES;
IF OBJECT_ID('CURSOS', 'U') IS NOT NULL DROP TABLE CURSOS;
IF OBJECT_ID('ESTUDIANTES', 'U') IS NOT NULL DROP TABLE ESTUDIANTES;

-- Crear la tabla ESTUDIANTES
CREATE TABLE ESTUDIANTES (
    ID_ESTUDIANTE INT PRIMARY KEY,
    NOMBRE NVARCHAR(100),
    APELLIDO NVARCHAR(100),
    EMAIL NVARCHAR(100) UNIQUE,
    FECHA_NACIMIENTO DATE
);

-- Crear la tabla CURSOS
CREATE TABLE CURSOS (
    ID_CURSO INT PRIMARY KEY,
    NOMBRE_CURSO NVARCHAR(100),
    DESCRIPCION NVARCHAR(255),
    DURACION DECIMAL(5, 1), -- Permite decimales
    PRECIO DECIMAL(10, 2)
);

-- Crear la tabla INSCRIPCIONES
CREATE TABLE INSCRIPCIONES (
    ID_INSCRIPCION INT PRIMARY KEY,
    ID_ESTUDIANTE INT,
    ID_CURSO INT,
    FECHA_INSCRIPCION DATE NOT NULL, -- Restricción NOT NULL
    CALIFICACION INT,
    CONSTRAINT FK_ESTUDIANTE FOREIGN KEY (ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID_ESTUDIANTE),
    CONSTRAINT FK_CURSO FOREIGN KEY (ID_CURSO) REFERENCES CURSOS(ID_CURSO)
);
-- Agregar una columna a ESTUDIANTES
ALTER TABLE ESTUDIANTES ADD DIRECCION NVARCHAR(200);

-- Modificar el tipo de datos en CURSOS
ALTER TABLE CURSOS ALTER COLUMN DURACION DECIMAL(5, 1);

--  Agregar una restricción NOT NULL a INSCRIPCIONES
ALTER TABLE INSCRIPCIONES ALTER COLUMN FECHA_INSCRIPCION DATE NOT NULL;

--  Eliminar la restricción UNIQUE si ya existe
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'UQ' AND name = 'UQ_NOMBRE_CURSO')
    ALTER TABLE CURSOS DROP CONSTRAINT UQ_NOMBRE_CURSO;

-- Volver a agregar la restricción UNIQUE en CURSOS
ALTER TABLE CURSOS ADD CONSTRAINT UQ_NOMBRE_CURSO UNIQUE (NOMBRE_CURSO);

--  Agregar una restricción CHECK a ESTUDIANTES (mínimo 16 años)
ALTER TABLE ESTUDIANTES ADD CONSTRAINT CK_FECHA_NACIMIENTO 

CHECK (FECHA_NACIMIENTO <= DATEADD(YEAR, -16, GETDATE()));
--  Agregar la restricción CHECK para que los estudiantes tengan al menos 16 años
ALTER TABLE ESTUDIANTES 
ADD CONSTRAINT CK_FECHA_NACIMIENTO CHECK (FECHA_NACIMIENTO <= DATEADD(YEAR, -16, GETDATE()));

--  Modificar una clave foránea en INSCRIPCIONES (Eliminar y volver a agregar con ON UPDATE CASCADE)
ALTER TABLE INSCRIPCIONES DROP CONSTRAINT FK_ESTUDIANTE;
ALTER TABLE INSCRIPCIONES ADD CONSTRAINT FK_ESTUDIANTE FOREIGN KEY 
(ID_ESTUDIANTE) REFERENCES ESTUDIANTES(ID_ESTUDIANTE) ON UPDATE CASCADE;

--  Modificar la restricción en CURSOS para que el precio sea >= 0
ALTER TABLE CURSOS ADD CONSTRAINT CK_PRECIO CHECK (PRECIO >= 0);

--  Eliminar la restricción CHECK antes de eliminar la columna FECHA_NACIMIENTO
ALTER TABLE ESTUDIANTES DROP CONSTRAINT CK_FECHA_NACIMIENTO;

--  Ahora sí, eliminar la columna FECHA_NACIMIENTO
ALTER TABLE ESTUDIANTES DROP COLUMN FECHA_NACIMIENTO;

--  Cambiar el nombre de la columna CALIFICACION en INSCRIPCIONES a PUNTUACION
EXEC sp_rename 'INSCRIPCIONES.CALIFICACION', 'PUNTUACION', 'COLUMN';

--  Deshabilitar y habilitar la restricción UNIQUE en NOMBRE_CURSO
ALTER TABLE CURSOS NOCHECK CONSTRAINT UQ_NOMBRE_CURSO;
ALTER TABLE CURSOS CHECK CONSTRAINT UQ_NOMBRE_CURSO;

